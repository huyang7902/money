<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huyang.dao.MoneyLogMapper" >
  <resultMap id="BaseResultMap" type="com.huyang.lib.to.MoneyLog" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="MONEY" property="money" jdbcType="DECIMAL" />
    <result column="TOTLE_MONEY" property="totleMoney" jdbcType="DECIMAL" />
    <result column="USEFOR" property="usefor" jdbcType="VARCHAR" />
    <result column="UID" property="uid" jdbcType="INTEGER" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="WEEKS" property="weeks" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="TINYINT" />
  </resultMap>
  
  <resultMap id="UserTotleMap" type="com.huyang.lib.to.UserTotle">
    <result column="USER_NAME" property="userName"/>
    <result column="SUM_MONEY" property="sumMoney"/>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, MONEY, USEFOR, UID, USER_NAME, CREATE_TIME, WEEKS, STATUS
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from money_log
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from money_log
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.huyang.lib.to.MoneyLog" >
    insert into money_log (ID, MONEY, USEFOR, 
      UID, USER_NAME, CREATE_TIME, 
      WEEKS, STATUS)
    values (#{id,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, #{usefor,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{weeks,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.huyang.lib.to.MoneyLog" >
    insert into money_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
      <if test="usefor != null" >
        USEFOR,
      </if>
      <if test="uid != null" >
        UID,
      </if>
      <if test="userName != null" >
        USER_NAME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="weeks != null" >
        WEEKS,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="usefor != null" >
        #{usefor,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="weeks != null" >
        #{weeks,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huyang.lib.to.MoneyLog" >
    update money_log
    <set >
      <if test="money != null" >
        MONEY = #{money,jdbcType=DECIMAL},
      </if>
      <if test="usefor != null" >
        USEFOR = #{usefor,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        UID = #{uid,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="weeks != null" >
        WEEKS = #{weeks,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huyang.lib.to.MoneyLog" >
    update money_log
    set MONEY = #{money,jdbcType=DECIMAL},
      USEFOR = #{usefor,jdbcType=VARCHAR},
      UID = #{uid,jdbcType=INTEGER},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      WEEKS = #{weeks,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="balance">
    UPDATE money_log set STATUS = 0, SETTLEMENT_ID=#{settlementId} where STATUS = 1
  </update>

  <select id="getMoneyLogByYearAndMonth" resultMap="BaseResultMap">
    SELECT * FROM money_log
    WHERE
    STATUS = 0
      <if test="year != null and month != null">
        and DATE_FORMAT(CREATE_TIME, '%Y-%c') = '${year}-${month}'
      </if>
      <if test="year != null and month == null">
        and DATE_FORMAT(CREATE_TIME, '%Y') = #{year}
      </if>

      order by CREATE_TIME desc

  </select>
  <select id="getMoneyLog" resultMap="BaseResultMap" parameterType="com.huyang.criteria.MoneyLogCriteriaTO">
    SELECT * FROM money_log
    <where>
      <if test="uid != null and uid != ''">UID = #{uid}</if>
      <if test="status != null and status != ''">STATUS = #{status}</if>
      <if test="createTime != null and createTime != ''">CREATE_TIME =#{createTime}</if>
      <if test="year != null and month != null">
        and DATE_FORMAT(CREATE_TIME, '%Y-%c') = '${year}-${month}'
      </if>
      <if test="year != null and month == null">
        and DATE_FORMAT(CREATE_TIME, '%Y') = #{year}
      </if>
    </where>
    ORDER BY CREATE_TIME desc
  </select>

  <select id="getMoneyByUserName" resultMap="UserTotleMap">
    SELECT SUM(MONEY) as SUM_MONEY, USER_NAME FROM money_log GROUP BY USER_NAME
  </select>


  <select id="getUnBalanceSumMoneyLog" resultMap="BaseResultMap">
    SELECT SUM(money) as TOTLE_MONEY,USER_NAME, UID FROM money_log WHERE STATUS= 1 and UID = #{uid}
  </select>

  <select id="getSumMoneyLog" resultMap="BaseResultMap">
    SELECT SUM(money) as TOTLE_MONEY,USER_NAME, UID FROM money_log WHERE STATUS= 0 and UID = #{uid}
  </select>

  <select id="getMoneyLogByYearAndMonthTotle" resultType="java.math.BigDecimal">
    SELECT sum(MONEY) FROM money_log
    where
      STATUS = 0
      <if test="year != null and month != null">
        and DATE_FORMAT(CREATE_TIME, '%Y-%c') = '${year}-${month}'
      </if>
      <if test="year != null and month == null">
        and DATE_FORMAT(CREATE_TIME, '%Y') = #{year}
      </if>

  </select>

  <select id="getMoneyLogBySettlementId" resultMap="BaseResultMap">
    select * from money_log where SETTLEMENT_ID = #{settlementId} order by CREATE_TIME asc
  </select>
</mapper>